// <auto-generated />
using System;
using Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190210162132_I")]
    partial class I
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Data.Model.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InviteString");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("StartEducation")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Database.Data.Model.ScheduleField", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("GroupID");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.ToTable("ScheduleFields");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ScheduleField");
                });

            modelBuilder.Entity("Database.Data.Model.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Database.Data.Model.SubjectCall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("EndLesson");

                    b.Property<int>("Order");

                    b.Property<TimeSpan>("StartLesson");

                    b.HasKey("ID");

                    b.ToTable("SubjectCalls");
                });

            modelBuilder.Entity("Database.Data.Model.SubjectInstance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Audience")
                        .IsRequired();

                    b.Property<int?>("ScheduleSubjectID");

                    b.Property<int?>("SubjectID");

                    b.Property<int>("SubjectType");

                    b.Property<string>("Teacher")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ScheduleSubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectInstances");
                });

            modelBuilder.Entity("Database.Data.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupID");

                    b.Property<int>("TelegramID");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("TelegramID")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Data.Model.ParityDependentScheduleSubject", b =>
                {
                    b.HasBaseType("Database.Data.Model.ScheduleField");

                    b.Property<int?>("NotParitySubjectInstanceID");

                    b.Property<int?>("ParitySubjectInstanceID");

                    b.HasIndex("NotParitySubjectInstanceID");

                    b.HasIndex("ParitySubjectInstanceID");

                    b.HasDiscriminator().HasValue("ParityDependentScheduleSubject");
                });

            modelBuilder.Entity("Database.Data.Model.ParityIndependentScheduleSubject", b =>
                {
                    b.HasBaseType("Database.Data.Model.ScheduleField");

                    b.Property<int?>("SubjectID");

                    b.HasIndex("SubjectID");

                    b.HasDiscriminator().HasValue("ParityIndependentScheduleSubject");
                });

            modelBuilder.Entity("Database.Data.Model.ScheduleField", b =>
                {
                    b.HasOne("Database.Data.Model.Group", "Group")
                        .WithMany("ScheduleSubjects")
                        .HasForeignKey("GroupID");
                });

            modelBuilder.Entity("Database.Data.Model.SubjectInstance", b =>
                {
                    b.HasOne("Database.Data.Model.ScheduleField", "ScheduleSubject")
                        .WithMany()
                        .HasForeignKey("ScheduleSubjectID");

                    b.HasOne("Database.Data.Model.Subject", "Subject")
                        .WithMany("Instances")
                        .HasForeignKey("SubjectID");
                });

            modelBuilder.Entity("Database.Data.Model.User", b =>
                {
                    b.HasOne("Database.Data.Model.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupID");
                });

            modelBuilder.Entity("Database.Data.Model.ParityDependentScheduleSubject", b =>
                {
                    b.HasOne("Database.Data.Model.SubjectInstance", "NotParitySubjectInstance")
                        .WithMany()
                        .HasForeignKey("NotParitySubjectInstanceID");

                    b.HasOne("Database.Data.Model.SubjectInstance", "ParitySubjectInstance")
                        .WithMany()
                        .HasForeignKey("ParitySubjectInstanceID");
                });

            modelBuilder.Entity("Database.Data.Model.ParityIndependentScheduleSubject", b =>
                {
                    b.HasOne("Database.Data.Model.SubjectInstance", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID");
                });
#pragma warning restore 612, 618
        }
    }
}
